<Window x:Class="WatchdogControl.Views.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WatchdogControl.Views" xmlns:vm="clr-namespace:WatchdogControl.ViewModels"
        xmlns:cnv="clr-namespace:WatchdogControl.Converters" xmlns:enums="clr-namespace:WatchdogControl.Enums"
        xmlns:watchdog="clr-namespace:WatchdogControl.Models.Watchdog" mc:Ignorable="d" Title="Watchdog Control"
        Height="750" Width="1400" WindowStartupLocation="CenterScreen">

    <d:Window.DataContext>
        <vm:MainWindowViewModel />
    </d:Window.DataContext>

    <Window.Resources>

        <cnv:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        <cnv:StateConverter x:Key="StateConverter" />

        <Style x:Key="EnableDisableButtonStyle" TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedWatchdog}" Value="{x:Null}">
                    <Setter Property="Opacity" Value="0.3" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <DockPanel>

        <ToolBar DockPanel.Dock="Top" Height="40">

            <Button Command="{Binding StartStopRequestAllWatchdogsCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Image Source="pack://application:,,,/Images/Pause.png" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip" Value="Пауза" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPause}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Image Source="pack://application:,,,/Images/Play.png" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="Продолжить опрос" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Command="{Binding RefreshWatchdogsCommand}" ToolTip="Опросить все">
                <Image Source="pack://application:,,,/Images/Refresh.png" />
            </Button>

            <Separator />

            <Button Command="{Binding AddWatchdogCommand}" ToolTip="Добавить Watchdog">
                <Image Source="pack://application:,,,/Images/Add.png" />
            </Button>

            <Button Command="{Binding EditWatchdogCommand}" Style="{StaticResource EnableDisableButtonStyle}"
                    ToolTip="Изменить Watchdog">
                <Image Source="pack://application:,,,/Images/Edit.png" />
            </Button>

            <Button Command="{Binding RemoveWatchdogCommand}" Style="{StaticResource EnableDisableButtonStyle}"
                    ToolTip="Удалить Watchdog">
                <Image Source="pack://application:,,,/Images/Remove.png" />
            </Button>

            <Separator />

            <!--<ToggleButton Content="ВКЛ/ВЫКЛ" IsChecked="{Binding SelectedWatchdog.DoRequest}" />-->

            <TextBlock Text="ПАУЗА..." Foreground="Blue" FontWeight="Medium" FontSize="14" VerticalAlignment="Center"
                    Margin="30,0,0,0">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPause}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"
                                                    BeginTime="0:0:0" Duration="0:0:0.4" AutoReverse="True"
                                                    RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0"
                                                    BeginTime="0:0:0" Duration="0:0:0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

        </ToolBar>

        <StatusBar DockPanel.Dock="Bottom">

            <StatusBar.Items>
                <TextBlock Text="{Binding CurrentDateTime, StringFormat=dd.MM.yyyy HH:mm:ss}" Margin="0,0,10,0" />

                <TextBlock Text="{Binding CountInWork}" ToolTip="Кол-во работающих объектов" />
                <TextBlock Text="/" />
                <TextBlock Text="{Binding Watchdogs.Count}" ToolTip="Всего объектов" />

                <TextBlock Text="Время до обновления:" Margin="10,0,0,0" />
                <TextBlock Text="{Binding TimeUntilUpdate}" Margin="0,0,10,0" Width="20" />

                <!--<TextBlock Text="Прогресс опроса:"/>
                <Grid>
                    <ProgressBar Value="{Binding UpdateProgress}" Maximum="{Binding Watchdogs.Count}" Minimum="0" Width="150" Height="15"/>
                    <TextBlock Text="{Binding CurrentUpdatingWatchdog}"/>
                </Grid>-->
            </StatusBar.Items>
        </StatusBar>

        <TabControl>
            <TabItem Header="Watchdog`s" Width="100">
                <DataGrid ItemsSource="{Binding Watchdogs}" SelectedItem="{Binding SelectedWatchdog}"
                        AutoGenerateColumns="False" GridLinesVisibility="Horizontal" IsReadOnly="True">

                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <!-- От порядка следования стилей зависит раскраска грида -->
                                <DataTrigger Binding="{Binding State}" Value="{x:Static watchdog:WatchdogState.NotWork}">
                                    <Setter Property="Background" Value="Pink" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DbData.State}"
                                        Value="{x:Static watchdog:DbState.Unknown}">
                                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding State}"
                                        Value="{x:Static watchdog:WatchdogState.TurnedOff}">
                                    <Setter Property="Background" Value="#FFEAEAEA" />
                                    <Setter Property="FontStyle" Value="Italic" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding State}" Value="{x:Static watchdog:WatchdogState.Unknown}">
                                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DbData.State}"
                                        Value="{x:Static watchdog:DbState.Connecting}">
                                    <Setter Property="Background" Value="LightGoldenrodYellow" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DbData.State}"
                                        Value="{x:Static watchdog:DbState.Disconnected}">
                                    <Setter Property="Background" Value="Pink" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>

                        <DataGridCheckBoxColumn Header="Вкл."
                                Binding="{Binding DoRequest, UpdateSourceTrigger=PropertyChanged}"
                                ElementStyle="{StaticResource CheckBoxVerticalAlignCenterStyle}" />

                        <DataGridTextColumn Header="Наименование" Binding="{Binding Name}"
                                ElementStyle="{StaticResource TextBlockVerticalAlignCenterStyle}" />

                        <DataGridTemplateColumn Width="40">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding State, Converter={StaticResource StateConverter}}"
                                            Width="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Состояние"
                                Binding="{Binding State, Converter={StaticResource EnumDescriptionConverter}}"
                                ElementStyle="{StaticResource TextBlockVerticalAlignCenterStyle}" />

                        <DataGridTextColumn Header="Значение" Binding="{Binding Values.Value}"
                                ElementStyle="{StaticResource TextBlockHorizontalAlignCenterStyle}" />

                        <DataGridTextColumn Header="Дата обновл. значения"
                                Binding="{Binding Values.LastValueChangeDate, StringFormat=dd.MM.yyyy HH:mm:ss, TargetNullValue=-}"
                                ElementStyle="{StaticResource TextBlockHorizontalAlignCenterStyle}" Width="163" />

                        <DataGridTextColumn Header="Дата опроса"
                                Binding="{Binding Values.LastRequestDate, StringFormat=dd.MM.yyyy HH:mm:ss, TargetNullValue=-}"
                                ElementStyle="{StaticResource TextBlockHorizontalAlignCenterStyle}" Width="150" />

                        <DataGridTemplateColumn Width="40">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding DbData.State, Converter={StaticResource StateConverter}}"
                                            Width="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Состояние подключения к БД"
                                Binding="{Binding DbData.State, Converter={StaticResource EnumDescriptionConverter}}"
                                ElementStyle="{StaticResource TextBlockVerticalAlignCenterStyle}" />

                        <DataGridTextColumn Header="Текущая ошибка" Binding="{Binding DbData.LastError}" Width="*"
                                ElementStyle="{StaticResource TextBlockTextWrappingStyle}" />

                    </DataGrid.Columns>

                    <DataGrid.ContextMenu>
                        <ContextMenu>

                            <!-- ВКЛ/ВЫКЛ опрос -->
                            <MenuItem Command="{Binding StartStopRequestWatchdogCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="Выключить опрос" />
                                        <Setter Property="Icon">
                                            <Setter.Value>
                                                <Image Source="pack://application:,,,/Images/Pause.png" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedWatchdog.State}"
                                                    Value="{x:Static watchdog:WatchdogState.TurnedOff}">
                                                <Setter Property="Header" Value="Включить опрос" />
                                                <Setter Property="Icon">
                                                    <Setter.Value>
                                                        <Image Source="pack://application:,,,/Images/Play.png" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>

                            <!-- Опросить принудительно -->
                            <MenuItem Header="Опросить" Command="{Binding RefreshWatchdogCommand}">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedWatchdog.State}"
                                                    Value="{x:Static watchdog:WatchdogState.TurnedOff}">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>

                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Images/Refresh.png" />
                                </MenuItem.Icon>
                            </MenuItem>

                            <Separator />

                            <!-- Изменить данные -->
                            <MenuItem Header="Изменить" Command="{Binding EditWatchdogCommand}">
                                <MenuItem.Icon>
                                    <Image Source="pack://application:,,,/Images/Edit.png" />
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>
                    </DataGrid.ContextMenu>

                </DataGrid>
            </TabItem>

            <TabItem Width="100" HorizontalAlignment="Left" DataContext="{Binding MemoryLogVm}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Лог" />
                        <Image Height="17" Margin="10,0,0,0">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasWarnings}" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/Images/Warning.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/Images/Error.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                </TabItem.Header>

                <DockPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5">
                        <TextBlock>
                            <Run Text="Не квитированных ошибок: " Foreground="Red" />
                            <Run Text="{Binding ActiveErrorsCount, Mode=OneWay}" FontWeight="Medium" />
                        </TextBlock>
                        <TextBlock Margin=" 20,0,0, 0">
                            <Run Text="Не квитированных предупреждений: " Foreground="Orange" />
                            <Run Text="{Binding ActiveWarningsCount, Mode=OneWay}" FontWeight="Medium" />
                        </TextBlock>
                        <Button Content="Квитировать все" Margin="20,0,0,0" Padding="10,0,10,0" Height="25"
                                Command="{Binding ResetAllIncidentCommand}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5">
                        <CheckBox Content="Ошибки" IsChecked="{Binding Filter.ShowErrors}" Margin="0,0,5,0" />
                        <CheckBox Content="Предупреждения" IsChecked="{Binding Filter.ShowWarnings}" Margin="5,0,5,0" />
                        <CheckBox Content="Остальное" IsChecked="{Binding Filter.ShowOthers}" Margin="5,0,5,0" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5">
                        <TextBlock Text="Поиск: " />
                        <TextBox Text="{Binding Filter.FilterText, UpdateSourceTrigger=PropertyChanged}" Width="200"
                                FontSize="14" Margin="10,0,0,0" />
                    </StackPanel>

                    <ListView ItemsSource="{Binding MemoryLogStore.View}" SelectedItem="{Binding SelectedItem}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WarningType}" Value="{x:Static enums:WarningType.Ok}">
                                        <Setter Property="Background" Value="LightGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WarningType}"
                                            Value="{x:Static enums:WarningType.Warning}">
                                        <Setter Property="Background" Value="Yellow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WarningType}"
                                            Value="{x:Static enums:WarningType.Unknown}">
                                        <Setter Property="Background" Value="Gainsboro" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WarningType}"
                                            Value="{x:Static enums:WarningType.Error}">
                                        <Setter Property="Background" Value="Pink" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Height="16" Width="16" Margin="0,0,5,0">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsActiveWarning}" Value="True">
                                                        <Setter Property="Source"
                                                                Value="pack://application:,,,/Images/Warning.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsActiveError}" Value="True">
                                                        <Setter Property="Source"
                                                                Value="pack://application:,,,/Images/Error.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <TextBlock Text="{Binding Text}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                    </ListView>

                </DockPanel>
            </TabItem>
        </TabControl>

    </DockPanel>
</Window>
